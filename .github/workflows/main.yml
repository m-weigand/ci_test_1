on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test_matrices:
    strategy:
      matrix:
        partitions : [4, 5]
    runs-on: ubuntu-latest
    name: matrix test
    steps:
      - uses: actions/checkout@v3
      - name: ECHO
        run: echo ${{matrix.partitions}}
      - name: SHELL
        run: bash test_matrix.sh ${{matrix.partitions}}
      - name: replace
        run: sed s/U_BOOT_ROOT="root=\/dev\/mmcblk0p8"/U_BOOT_ROOT="root=\/dev\/mmcblk0p${{matrix.partitions}}"/ u-boot
      # - name: cat
      #   run: cat u-boot

  # hello_world_job:
  #   runs-on: ubuntu-latest
  #   name: test releases
  #   steps:
  #     - name: get pwd
  #       run: pwd
  #     - name: create dummy file
  #       run: bash -c "echo test > release_binary_dummy"
  #     - name: ls
  #       run: ls
  #     - name: Upload files
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: dummy_file
  #         path: release_binary_dummy

  # compile_uboot:
  #   runs-on: ubuntu-latest
  #   name: compile uboot for the PineNote
  #   steps:
  #     - name: Prepare environment
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get -y install build-essential crossbuild-essential-arm64 device-tree-compiler python3-pyelftools
  #     - name: Checkout rkbin
  #       run: |
  #         test -d rkbin || git clone --depth 1 --branch master https://github.com/rockchip-linux/rkbin.git
  #         test -d u-boot-pinenote || git clone --branch branch_pinenote2 --depth 1 https://github.com/m-weigand/u-boot-pinenote
  #         cd u-boot-pinenote
  #         export CROSS_COMPILE=aarch64-linux-gnu-
  #         make clean;
  #         make rk3566-pinenote_defconfig;
  #         ./make.sh
  #         ./make.sh trust
  #     - name: Upload files
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: uboot files
  #         path: |
  #           u-boot-pinenote/uboot.img
  #           u-boot-pinenote/trust.img
  #           u-boot-pinenote/idblock.bin

# cd ..
# test -d artifacts && rm -r artifacts
# mkdir artifacts
# cp u-boot-pinenote/idblock.bin u-boot-pinenote/uboot.img u-boot-pinenote/trust.img artifacts/
# cd ..

  # draft_release_job:
  #   # if: startsWith(github.ref, 'refs/tags/')
  #   # if: contains(github.ref, "main")
  #   runs-on: ubuntu-latest
  #   needs:
  #     - hello_world_job
  #   steps:
  #     - name: Clone workflow repository
  #       uses: actions/checkout@v3
  #     - name: Download image artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         path: artifacts/
  #     - name: asda
  #       run: ls artifacts/*
  #     - name: asda
  #       run: ls artifacts/dummy_file
  #     - name: Make release
  #       uses: softprops/action-gh-release@v0.1.15
  #       with:
  #         draft: true
  #         files: artifacts/dummy_file/release_binary_dummy
